#include <iostream> 
using namespace std; 

// Função que define pivô como o último e bota ele no lugar entre os maiores (que ele) e menores (que ele)
int particionar(int vetor[], int inicio, int fim) 
{ 
    int pivo = vetor[fim]; 
    int i = (inicio - 1);
    int temp = 0 ;

    for (int j = inicio; j <= fim - 1; j++) { 
        if (vetor[j] <= pivo) { 
            i++; 
            temp = vetor[i]; 
            vetor[i] = vetor[j];
            vetor[j] = temp;
        } 
    } 
    temp = vetor[i + 1]; 
    vetor[i + 1] = vetor[fim];
    vetor[fim] = temp;
    return (i + 1); 
} 

//Função recursiva
void quickSort(int vetor[], int inicio, int fim) 
{ 
    if (inicio < fim) { 
        //Separando dois vetores para chamadas recursivas
        int pivo = particionar(vetor, inicio, fim); 
        quickSort(vetor, inicio, pivo - 1); 
        quickSort(vetor, pivo + 1, fim); 
    } 
} 

// Teste 
int main() 
{ 

    int n = 5; 
    int vetor[n] = { 4, 2, 6, 9, 2 }; 

    quickSort(vetor, 0, n - 1); 
    
    //Printar
    for (int i = 0; i < n; i++) { 
        cout << vetor[i] << " "; 
    } 

    return 0; 
} 
